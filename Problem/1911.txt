<problem-name>흙길 보수하기
<blog>https://tussle.tistory.com/1052
<tag>그리디 알고리즘, 정렬, 스위핑
<java-code>
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class Main {
    static class Info implements Comparable&lt;Info>{
        int s, e;
        public Info(int s, int e){
            this.s = s;
            this.e = e;
        }

        @Override
        public int compareTo(Info o) {
            if(this.s == o.s)
                return o.e - this.e;
            return this.s - o.s;
        }
    }
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = new StringTokenizer(br.readLine()," ");
        int N = Integer.parseInt(st.nextToken());
        int L = Integer.parseInt(st.nextToken());
        PriorityQueue&lt;Info> pq = new PriorityQueue&lt;>();
        for(int i=0;i&lt;N;i++){
            st = new StringTokenizer(br.readLine(), " ");
            int s = Integer.parseInt(st.nextToken());
            int e = Integer.parseInt(st.nextToken());
            pq.offer(new Info(s, e));
        }
        int result = 0;
        int fill = 0;
        while(!pq.isEmpty()){
            Info cur = pq.poll();
            if(cur.e &lt; fill)
                continue;

            if(fill &lt; cur.s)
                fill = cur.s;

            int remain = (cur.e - fill) % L;
            result += (cur.e - fill) / L;
            fill = cur.e;
            if(remain != 0) {
                result++;
                fill += L - remain;
            }

        }
        bw.write(String.valueOf(result));
        bw.flush();
        bw.close();
        br.close();
    }
}