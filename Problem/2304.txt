<problem-name>창고 다각형
<blog>
<tag>구현, 자료 구조, 브루트포스 알고리즘, 스택
<java-code>
import java.io.*;
import java.util.*;

public class Main {

    static Map&lt;Integer, Integer> map = new HashMap&lt;>();
    static int max = 0;
    static int maxIndex = 0;
    static int n = 0;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        n = Integer.parseInt(br.readLine());
        StringTokenizer st;

        for(int i=0;i&lt;n;i++) {
            st = new StringTokenizer(br.readLine(), " ");
            int index = Integer.parseInt(st.nextToken());
            int h = Integer.parseInt(st.nextToken());
            map.put(index, h);
            if(h > max){
                max = h;
                maxIndex = index;
            }
        }
        Set&lt;Integer> set = map.keySet();
        List&lt;Integer> list = new ArrayList&lt;>(set);
        Collections.sort(list);

        int result = 0;
        int left = list.get(0);
        int lVal = map.get(left);
        int right = list.get(list.size()-1);
        int rVal = map.get(right);

        for (int i = 0; i &lt; list.size(); i++) {
            int index = list.get(i);
            int value = map.get(index);
            result += lVal * (index-left);
            left = index;
            lVal = Math.max(lVal, value);
            if (index==maxIndex) break;
        }

        for (int i = list.size()-1; i >= 0; i--) {
            int index = list.get(i);
            int value = map.get(index);
            result += rVal * (right-index);
            right = index;
            rVal = Math.max(rVal, value);
            if (index==maxIndex) break;
        }
        result += max;

        bw.write(String.valueOf(result));
        bw.flush();
        br.close();
        bw.close();
    }

}