<problem-name>순회강연
<blog>https://tussle.tistory.com/960
<tag>자료 구조, 그리디 알고리즘, 정렬, 우선순위 큐
<java-code>
import java.io.*;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class Main{
    static class info implements Comparable&lt;info>{
        int p, d;
        public info(int p, int d){
            this.p = p;
            this.d = d;
        }
        @Override
        public int compareTo(info o) {
            if(this.p == o.p)
                return o.d - this.d;
            return o.p - this.p;
        }

    }
    static PriorityQueue&lt;info> pq = new PriorityQueue&lt;>();
    static boolean[] check;
    static int n, max = -1, answer = 0;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st;
        n = Integer.parseInt(br.readLine());
        for(int i=0;i&lt;n;i++){
            st = new StringTokenizer(br.readLine()," ");
            int p = Integer.parseInt(st.nextToken());
            int d = Integer.parseInt(st.nextToken());
            max = Math.max(max, d);
            pq.add(new info(p, d));
        }
        check = new boolean[max+1];
        while(!pq.isEmpty()){
            info cur = pq.poll();
            for(int i=cur.d-1;i>=0;i--){
                if(!check[i]){
                    check[i] = true;
                    answer += cur.p;
                    break;
                }
            }
        }
        bw.write(answer + "");
        bw.flush();
        bw.close();
        br.close();
    }
}