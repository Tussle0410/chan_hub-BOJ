<problem-name>문어 숫자
<blog>
<tag>수학, 구현, 문자열, 사칙연산
<java-code>
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        while(true){
            String str = br.readLine();
            if(str.equals("#"))
                break;
            int sum = 0;
            int len = str.length()-1;
            for(int i=len;i>=0;i--)
                sum += Math.pow(8, i) * getOctopusNum(str.charAt(len-i));
            bw.write(String.valueOf(sum));
            bw.newLine();
        }
        bw.flush();
        bw.close();
        br.close();
    }
    static int getOctopusNum(char c){
        if(c== '-')
            return 0;
        else if(c == '\\')
            return 1;
        else if(c == '(')
            return 2;
        else if(c == '@')
            return 3;
        else if(c == '?')
            return 4;
        else if(c == '>')
            return 5;
        else if(c == '&')
            return 6;
        else if(c == '%')
            return 7;
        else
            return -1;
    }
}