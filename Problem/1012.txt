<problem-name>유기농 배추
<blog>https://tussle.tistory.com/530
<tag>그래프 이론, 그래프 탐색, 너비 우선 탐색, 깊이 우선 탐색
<java-code>
import java.io.*;
import java.util.*;
public class Main{
	public static int T,N,M,K,count;
	public static int[][] earth;
	public static int[] dx = {-1, 1, 0, 0};
	public static int[] dy = {0, 0, -1, 1};
	public static boolean[][] check;
    public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    	T = Integer.parseInt(br.readLine());
    	StringTokenizer st;
    	for(int i=0;i&lt;T;i++) {
    		count = 0;
    		st = new StringTokenizer(br.readLine()," ");
    		N = Integer.parseInt(st.nextToken());
    		M = Integer.parseInt(st.nextToken());
    		K = Integer.parseInt(st.nextToken());
    		earth = new int[N][M];
    		check = new boolean[N][M];
    		for(int j=0;j&lt;K;j++) {
    			st = new StringTokenizer(br.readLine()," ");
    			int X = Integer.parseInt(st.nextToken());
    			int Y = Integer.parseInt(st.nextToken());
    			earth[X][Y] = 1;
    		}
    		for(int j=0;j&lt;N;j++) {
    			for(int s=0;s&lt;M;s++) {
    				if(!check[j][s] && earth[j][s]==1) {
    					check[j][s] = true;
    					dfs(j,s);
    					count++;
    				}
    			}
    		}
    		bw.write(String.valueOf(count));
    		bw.newLine();
    	}
    	bw.flush();
    	bw.close();
    	br.close();
    }
    public static void dfs(int x, int y) {
    	for(int i=0;i&lt;4;i++) {
    		int tempX = x + dx[i];
    		int tempY = y + dy[i];
    		if(tempX>=0 && tempX&lt;N && tempY>=0 && tempY&lt;M && !check[tempX][tempY]) {
    			check[tempX][tempY] = true;
    			if(earth[tempX][tempY]==1)
    				dfs(tempX,tempY);
    		}
    	}
    	return;
    }
}