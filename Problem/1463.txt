<problem-name>1로 만들기
<blog>https://tussle.tistory.com/237
<tag>다이나믹 프로그래밍
<java-code>
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayDeque;
import java.util.Queue;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		int N = Integer.parseInt(br.readLine());
		Queue&lt;Integer> q = new ArrayDeque&lt;>();
		boolean[] visited = new boolean[N + 1];
		visited[N] = true;
		int result = 0;
		q.offer(N);
		while (!q.isEmpty()) {
			int size = q.size();
			boolean flag = false;
			for (int i = 0; i &lt; size; i++) {
				int cur = q.poll();
				if (cur == 1) {
					flag = true;
					break;
				}
				if (cur % 3 == 0 && !visited[cur / 3]) {
					visited[cur / 3] = true;
					q.add(cur / 3);
				}

				if (cur % 2 == 0 && !visited[cur / 2]) {
					visited[cur / 2] = true;
					q.add(cur / 2);
				}

				if (!visited[cur - 1]) {
					visited[cur - 1] = true;
					q.add(cur - 1);
				}
			}
			if (flag)
				break;
			result++;
		}
		bw.write(String.valueOf(result));
		bw.flush();
		bw.close();
		br.close();
	}
}