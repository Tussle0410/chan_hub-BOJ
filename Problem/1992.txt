<problem-name>쿼드트리
<blog>https://tussle.tistory.com/320
<tag>분할 정복, 재귀
<java-code>
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	static int[][] map;
	static StringBuilder result = new StringBuilder();
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int N = Integer.parseInt(br.readLine());
		map = new int[N][N];
		for(int i=0;i&lt;N;i++) {
			String str = br.readLine();
			for(int j=0;j&lt;N;j++)
				map[i][j] = Character.getNumericValue(str.charAt(j));
		}
		int temp = mapCheck(0, 0, N);
		if(temp == 2)
			search(0, 0, N/2);
		else
			result.append(temp);
		System.out.print(result);
	}
	private static void search(int r, int c, int size) {
		result.append("(");
		int temp = mapCheck(r, c, size);
		if(temp != 2)
			result.append(temp);
		else
			search(r, c, size >> 1);
		temp = mapCheck(r, c + size, size);
		if(temp != 2)
			result.append(temp);
		else
			search(r, c + size, size >> 1);

		temp = mapCheck(r + size, c, size);
		if(temp != 2)
			result.append(temp);
		else
			search(r + size, c, size >> 1);

		temp = mapCheck(r + size, c + size, size);
		if(temp != 2)
			result.append(temp);
		else
			search(r + size, c + size, size >> 1);
		result.append(")");
	}
	private static int mapCheck(int r, int c, int size) {
		int cur = map[r][c];
		for(int i=r;i&lt;r + size;i++) {
			for(int j=c;j&lt;c + size;j++) {
				if(cur != map[i][j])
					return 2;
			}
		}
		return cur;
	}

}