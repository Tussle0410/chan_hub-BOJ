<problem-name>여행 가자
<blog>https://tussle.tistory.com/740
<tag>자료 구조, 그래프 이론, 그래프 탐색, 분리 집합
<java-code>
import java.io.*;
import java.util.*;
public class Main {
	static int N,M;
	static int[] node;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		N = Integer.parseInt(br.readLine());
		M = Integer.parseInt(br.readLine());
		node = new int[N+1];
		for(int i=1;i&lt;=N;i++)
			node[i] = i;
		for(int i=1;i&lt;=N;i++) {
			st = new StringTokenizer(br.readLine()," ");
			for(int j=1;j&lt;=N;j++) {
				int temp = Integer.parseInt(st.nextToken());
				if(temp==1)
					union(i,j);
			}
		}
		st = new StringTokenizer(br.readLine()," ");
		int a = Integer.parseInt(st.nextToken());
		for(int i=1;i&lt;M;i++) {
			int b = Integer.parseInt(st.nextToken());
			if(!isCheck(a, b)) {
				bw.write("NO");
				break;
			}
			if(i==M-1)
				bw.write("YES");
		}
		bw.flush();
		bw.close();
		br.close();
	}
	static int find(int n) {
		if(n==node[n])
			return n;
		return node[n] = find(node[n]);
	}
	static void union(int a, int b) {
		int x = find(a);
		int y = find(b);
		if(x!=y) {
			if(x>y)
				node[x] = y;
			else
				node[y] = x;
		}
		return;
	}
	static boolean isCheck(int a, int b) {
		int x = find(a);
		int y = find(b);
		if(x!=y)
			return false;
		else
			return true;
	}
}