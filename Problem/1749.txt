<problem-name>점수따먹기
<blog>
<tag>다이나믹 프로그래밍, 브루트포스 알고리즘, 누적 합
<java-code>
import java.io.*;
import java.util.*;

class Main {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = new StringTokenizer(br.readLine()," ");
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());
        int[][] DP = new int[N+1][M+1];
        for(int i=1;i&lt;=N;i++){
            st = new StringTokenizer(br.readLine()," ");
            for(int j=1;j&lt;=M;j++){
                DP[i][j] = DP[i-1][j] + DP[i][j-1] - DP[i-1][j-1] + Integer.parseInt(st.nextToken());
            }
        }
        int result = Integer.MIN_VALUE;
        for(int i=1;i&lt;=N;i++){
            for(int j=1;j&lt;=M;j++){
                for(int k=i;k&lt;=N;k++){
                    for(int l=j;l&lt;=M;l++){
                        int sum = DP[k][l] - DP[k][j-1] - DP[i-1][l] + DP[i-1][j-1];
                        result = Math.max(result, sum);
                    }
                }
            }
        }
        bw.write(String.valueOf(result));
        bw.flush();
        bw.close();
        br.close();
    }
}