<problem-name>운동
<blog>https://tussle.tistory.com/613
<tag>그래프 이론, 최단 경로, 플로이드–워셜
<java-code>
import java.io.*;
import java.util.*;
public class Main{
	public static int V,E,INF = Integer.MAX_VALUE/2;
	public static int[][] distance;
    public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    	StringTokenizer st = new StringTokenizer(br.readLine()," ");
    	V = Integer.parseInt(st.nextToken());
    	E = Integer.parseInt(st.nextToken());
    	distance = new int[V+1][V+1];
    	for(int i=1;i&lt;=V;i++)
        	Arrays.fill(distance[i], INF);

    	for(int i=0;i&lt;E;i++) {
    		st = new StringTokenizer(br.readLine()," ");
    		int a = Integer.parseInt(st.nextToken());
    		int b = Integer.parseInt(st.nextToken());
    		int c = Integer.parseInt(st.nextToken());
    		distance[a][b] = c;
    	}
    	shortestPath();

    	int result = INF;
    	for(int i=1;i&lt;=V;i++)
    		result = Math.min(result, distance[i][i]);

    	if(result==INF)
    		bw.write("-1");
    	else
    		bw.write(String.valueOf(result));
    	bw.flush();
    	bw.close();
    	br.close();

    }
    public static void shortestPath() {
    	for(int i=1;i&lt;=V;i++) {
    		for(int j=1;j&lt;=V;j++) {
    			for(int s=1;s&lt;=V;s++) {
    				if(distance[j][s] > distance[j][i] + distance[i][s])
    					distance[j][s] = distance[j][i] + distance[i][s];
    			}
    		}
    	}
    }
}