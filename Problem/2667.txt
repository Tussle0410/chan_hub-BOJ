<problem-name>단지번호붙이기
<blog>https://tussle.tistory.com/520
<tag>그래프 이론, 그래프 탐색, 너비 우선 탐색, 깊이 우선 탐색
<java-code>
import java.io.*;
import java.util.*;
public class Main {
	public static int[][] map;
	public static int[] dx = {-1, 1, 0, 0};
	public static int[] dy = {0, 0, -1, 1};
	public static List&lt;Integer> result = new ArrayList&lt;Integer>();
	public static boolean[][] check;
	public static int N;
    public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    	N = Integer.parseInt(br.readLine());
    	int index = 0;
    	map = new int[N][N];
    	check = new boolean[N][N];
    	for(int i=0;i&lt;N;i++) {
    		String temp = br.readLine();
    		for(int j=0;j&lt;N;j++) {
    			map[i][j] = Character.getNumericValue(temp.charAt(j));
    		}
    	}
    	for(int i=0;i&lt;N;i++) {
    		for(int j=0;j&lt;N;j++) {
    			if(!check[i][j]) {
      				check[i][j] = true;
    				if(map[i][j]==1) {
    					result.add(0);
    					dfs(i,j,index);
    					index++;
    				}
    			}
    		}
    	}
    	Collections.sort(result);
    	bw.write(String.valueOf(result.size()));
    	bw.newLine();
    	for(int i=0;i&lt;result.size();i++) {
    		bw.write(String.valueOf(result.get(i)));
    		bw.newLine();
    	}
    	bw.flush();
    	bw.close();
    	br.close();

    }
    public static void dfs(int x, int y,int index) {
    	result.set(index, result.get(index)+1);
    	for(int i=0;i&lt;4;i++) {
    		int tempX = x + dx[i];
    		int tempY = y + dy[i];
    		if(tempX>=0 && tempX&lt;N && tempY>=0 && tempY&lt;N && !check[tempX][tempY]) {
    			check[tempX][tempY] = true;
    			if(map[tempX][tempY]==1) {
    				dfs(tempX,tempY,index);
    			}
    		}
    	}
    }
}