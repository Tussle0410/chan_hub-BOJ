<problem-name>합분해
<blog>https://tussle.tistory.com/629
<tag>수학, 다이나믹 프로그래밍
<java-code>
import java.io.*;
import java.util.*;
public class Main{
	static int[][] DP;
    public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    	StringTokenizer st = new StringTokenizer(br.readLine()," ");
    	int N =Integer.parseInt(st.nextToken());
    	int K =Integer.parseInt(st.nextToken());
    	DP = new int[N+1][K+1];
    	init(K);
    	cal(N, K);
    	bw.write(String.valueOf(DP[N][K]));
    	bw.flush();
    	bw.close();
    	br.close();

    }
    static void cal(int n, int k) {
    	for(int i=1;i&lt;=n;i++) {
    		for(int j=1;j&lt;=k;j++) {
    			DP[i][j] = (DP[i][j-1] + DP[i-1][j]) % 1000000000;
    		}
    	}
    	return;
    }
    static void init(int k) {
    	for(int i = 1;i&lt;=k;i++)
    		DP[0][i] = 1;
    	return;
    }
}