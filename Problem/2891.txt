<problem-name>카약과 강풍
<blog>
<tag>구현, 그리디 알고리즘
<java-code>
import java.io.*;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = new StringTokenizer(br.readLine()," ");
        int N = Integer.parseInt(st.nextToken());
        int S = Integer.parseInt(st.nextToken());
        int R = Integer.parseInt(st.nextToken());
        int[] breakBoot = new int[N+1];
        st = new StringTokenizer(br.readLine()," ");
        for(int i=0;i&lt;S;i++)
            breakBoot[Integer.parseInt(st.nextToken())] = 1;

        st = new StringTokenizer(br.readLine()," ");
        for(int i=0;i&lt;R;i++){
            int n =Integer.parseInt(st.nextToken());
            if(breakBoot[n] == 1)
                breakBoot[n] = 0;
            else
                breakBoot[n] = 2;
        }
        for(int i=1;i&lt;=N;i++){
            if(breakBoot[i] == 1){
                if(breakBoot[i-1] == 2){
                    breakBoot[i] = 0;
                    breakBoot[i-1] = 0;
                }else if(i &lt; N && breakBoot[i+1] == 2){
                    breakBoot[i] = 0;
                    breakBoot[i+1] = 0;
                }
            }
        }
        int result = 0;
        for (int i = 0; i &lt;= N; i++) {
            if(breakBoot[i] == 1)
                result++;
        }
        bw.write(String.valueOf(result));
        bw.flush();
        bw.close();
        br.close();

    }
}