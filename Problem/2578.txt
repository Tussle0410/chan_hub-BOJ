<problem-name>빙고
<blog>
<tag>구현, 시뮬레이션
<java-code>
import java.io.*;

import java.util.StringTokenizer;

public class Main {
    static int[][] board = new int[5][5];
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st;
        for(int i=0;i&lt;5;i++){
            st = new StringTokenizer(br.readLine()," ");
            for(int j=0;j&lt;5;j++){
                board[i][j] = Integer.parseInt(st.nextToken());
            }
        }
        int cnt = 0;
        boolean bingo_flag = false;
        for(int i=0;i&lt;5;i++){
            st = new StringTokenizer(br.readLine()," ");
            for(int j=0;j&lt;5;j++){
                int num = Integer.parseInt(st.nextToken());
                boolean flag = false;
                for(int s = 0;s&lt;5;s++){
                    for(int k=0;k&lt;5;k++){
                        if(board[s][k] == num){
                            board[s][k] = 0;
                            flag = true;
                            break;
                        }
                    }
                    if(flag) {
                        break;
                    }
                }
                int bingo = rowCheck() + colCheck() + diagonalCheck();
                if(bingo >= 3){
                    cnt = i * 5 + (j+1);
                    bingo_flag = true;
                    break;
                }
            }
            if (bingo_flag) {
                break;
            }
        }
        bw.write(String.valueOf(cnt));
        bw.flush();
        bw.close();
        br.close();
    }
    static int rowCheck(){
        int bingo = 0;
        for(int i=0;i&lt;5;i++){
            if(board[i][0] == 0 && board[i][1] == 0 && board[i][2] == 0 && board[i][3] == 0 && board[i][4] == 0){
                bingo++;
            }
        }
        return bingo;
    }
    static int colCheck(){
        int bingo = 0;
        for(int i=0;i&lt;5;i++){
            if(board[0][i] == 0 && board[1][i] == 0 && board[2][i] == 0 && board[3][i] == 0 && board[4][i] == 0){
                bingo++;
            }
        }
        return bingo;
    }
    static int diagonalCheck(){
        int bingo = 0;
        if(board[0][0] == 0 && board[1][1] == 0 && board[2][2] == 0 && board[3][3] == 0 && board[4][4] == 0){
            bingo++;
        }
        if(board[0][4] == 0 && board[1][3] == 0 && board[2][2] == 0 && board[3][1] == 0 && board[4][0] == 0){
            bingo++;
        }
        return bingo;
    }

}