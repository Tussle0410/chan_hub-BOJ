<problem-name>사탕 박사 고창영
<blog>
<tag>구현, 브루트포스 알고리즘
<java-code>
import java.io.*;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int T = Integer.parseInt(br.readLine());
        StringTokenizer st;
        for(int tc = 0;tc&lt;T;tc++) {
            br.readLine();
            st = new StringTokenizer(br.readLine(), " ");
            int r = Integer.parseInt(st.nextToken());
            int c = Integer.parseInt(st.nextToken());
            char[][] box = new char[r][c];
            for (int i = 0; i &lt; r; i++) {
                String str = br.readLine();
                for (int j = 0; j &lt; c; j++) {
                    box[i][j] = str.charAt(j);
                }
            }
            int result = 0;
            for (int i = 0; i &lt; r; i++) {
                for (int j = 0; j &lt; c; j++) {
                    if (box[i][j] == 'o') {
                        if (rowCheck(box, i, j, r, c) || colCheck(box, i, j, r, c)) {
                            result++;
                        }
                    }
                }
            }
            bw.write(String.valueOf(result));
            bw.newLine();
        }
        bw.flush();
        bw.close();
        br.close();
    }
    static boolean rowCheck(char[][] box, int i, int j, int r, int c){
        if(i - 1 &lt; 0 || i + 1 >= r){
            return false;
        }
        if(box[i-1][j] == 'v' && box[i+1][j] == '^'){
            return true;
        }
        return false;
    }
    static boolean colCheck(char[][] box, int i, int j, int r, int c){
        if(j - 1 &lt; 0 || j + 1 >= c){
            return false;
        }
        if(box[i][j-1] == '>' && box[i][j+1] == '&lt;'){
            return true;
        }
        return false;
    }
}