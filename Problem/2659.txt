<problem-name>십자카드 문제
<blog>
<tag>구현, 브루트포스 알고리즘, 정렬
<java-code>
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		int min = Integer.MAX_VALUE;
		int[] val = new int[4];
		for(int i=0;i&lt;4;i++)
			val[i] = Integer.parseInt(st.nextToken());
		for(int i=0;i&lt;4;i++) {
			int temp = 0;
			for(int j=0;j&lt;4;j++)
				temp = temp * 10 + val[(i + j) % 4];
			min = Math.min(min,  temp);
		}
		int result = 1;
		for(int i=1111;i&lt;min;i++) {
			int tempVal = i;
			boolean flag = false;
			for(int j=0;j&lt;4;j++) {
				if(tempVal % 10 == 0) {
					flag = true;
					break;
				}
				tempVal /= 10;
			}
			if(flag)
				continue;

			String temp = String.valueOf(i);
			tempVal = Integer.MAX_VALUE;
			for(int j=0;j&lt;4;j++) {
				int t = 0;
				for(int s=0;s&lt;4;s++)
					t = t * 10 + Character.getNumericValue(temp.charAt((j+s) % 4));
				tempVal = Math.min(tempVal,  t);
			}

			if(!flag && tempVal == i)
				result++;

		}
		bw.write(String.valueOf(result));
		bw.flush();
		bw.close();
		br.close();
	}
}
