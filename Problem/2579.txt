<problem-name>계단 오르기
<blog>https://tussle.tistory.com/234
<tag>다이나믹 프로그래밍
<java-code>
import java.io.*;
public class Main{
	static Integer[][] check;
	static Integer[] stair;
	static int index;
	public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    	index = Integer.parseInt(br.readLine());
    	stair = new Integer[index+1];
    	check = new Integer[index+1][3];
    	stair[0] = 0;
    	for(int i=1;i&lt;=index;i++)
    		stair[i] = Integer.parseInt(br.readLine());

    	bw.write(String.valueOf(stairCal(0, 0)));
    	bw.flush();
    	bw.close();
    	br.close();
	}
	public static Integer stairCal(int depth, int stack) {
		if(depth>index)
			return -10000;

		if(depth==index)
			return stair[depth];

		if(check[depth][stack]!=null)
			return check[depth][stack];

		if(stack==2)
			check[depth][stack] = stairCal(depth+2, 1) + stair[depth];
		else
			check[depth][stack] = Math.max(stairCal(depth+1, stack+1), stairCal(depth+2, 1)) + stair[depth];

		return check[depth][stack];
		}
	}