<problem-name>줄 세우기
<blog>https://tussle.tistory.com/1014
<tag>그래프 이론, 위상 정렬, 방향 비순환 그래프
<java-code>
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		int[] count = new int[N+1];
		ArrayList&lt;ArrayList&lt;Integer>> rel = new ArrayList&lt;>();
		for(int i=0;i&lt;=N;i++)
			rel.add(new ArrayList&lt;>());
		for(int i=0;i&lt;M;i++) {
			st = new StringTokenizer(br.readLine()," ");
			int A = Integer.parseInt(st.nextToken());
			int B = Integer.parseInt(st.nextToken());
			rel.get(A).add(B);
			count[B]++;
		}
		StringBuilder answer = new StringBuilder();
		Queue&lt;Integer> q = new LinkedList&lt;>();
		for(int i=1;i&lt;=N;i++) {
			if(count[i] == 0)
				q.add(i);
		}
		while(!q.isEmpty()) {
			int cur = q.poll();
			answer.append(cur).append(" ");
			for(int next : rel.get(cur)) {
				count[next]--;
				if(count[next] == 0)
					q.add(next);
			}
		}
		bw.write(answer.toString());
		bw.flush();
		bw.close();
		br.close();

	}
}
