<problem-name>점프
<blog>
<tag>다이나믹 프로그래밍
<java-code>
import java.io.*;
import java.util.Arrays;
import java.util.StringTokenizer;


class Main {
    static long[][] DP;
    static int[][] arr;
    static final int INF = Integer.MAX_VALUE;
    static int N;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        N = Integer.parseInt(br.readLine());
        StringTokenizer st;
        arr = new int[N][N];
        DP = new long[N][N];
        for(int i=0;i&lt;N;i++){
            st = new StringTokenizer(br.readLine()," ");
            for(int j=0;j&lt;N;j++)
                arr[i][j] = Integer.parseInt(st.nextToken());
        }
        search(0, 0);

        bw.write(String.valueOf(DP[0][0]));
        bw.flush();
        bw.close();
        br.close();
    }
    static long search(int row, int col){
        if(row == N-1 && col == N-1) {
            return 1;
        }
        if(arr[row][col] == 0)
            return 0;

        if(DP[row][col] != 0)
            return DP[row][col];

        int len = arr[row][col];
        if(col + len &lt; N)
            DP[row][col] += search(row, col+len);
        if(row + len &lt; N)
            DP[row][col] += search(row+len, col);

        return DP[row][col];
    }
}
