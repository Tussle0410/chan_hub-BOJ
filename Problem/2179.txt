<problem-name>비슷한 단어
<blog>
<tag>자료 구조, 문자열, 정렬, 해시를 사용한 집합과 맵
<java-code>
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Main {
    static class Word implements Comparable&lt;Word>{
        String str;
        int idx;
        public Word(String str, int idx) {
            this.str = str;
            this.idx = idx;
        }
        @Override
        public int compareTo(Word o) {
            return this.str.compareTo(o.str);
        }
    }
    static class Info implements Comparable&lt;Info>{
        String str;
        int S, T, index;
        public Info(String str, int S, int T, int index) {
            this.str = str;
            this.S = S;
            this.T = T;
            this.index = index;
        }
        @Override
        public int compareTo(Info o) {
            if(this.S == o.S)
                return this.T-o.T;
            return this.S - o.S;
        }
    }
    static String str1, str2;
    static int val, N;
    static List&lt;Info> infos = new ArrayList&lt;>();
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        N = Integer.parseInt(br.readLine());
        val = -1;
        List&lt;Word> words = new ArrayList&lt;>();
        for(int i=0;i&lt;N;i++)
            words.add(new Word(br.readLine(), i));

        Collections.sort(words);

        for(int i=0;i&lt;N;i++) {
            for(int j=i+1;j&lt;N;j++)
                if(!compare(words.get(i), words.get(j), i, j))
                    break;
        }
        Collections.sort(infos);
        Info info = infos.get(0);
        str1 = info.str;
        str2 = words.get(info.index).str;
        bw.write(str1);
        bw.newLine();
        bw.write(str2);
        bw.flush();
        bw.close();
        br.close();
    }
    static boolean compare(Word s1, Word s2, int s, int e) {
        int cnt = 0;
        int len = Math.min(s1.str.length(), s2.str.length());

        for(int i=0;i&lt;len;i++) {
            if(s1.str.charAt(i) != s2.str.charAt(i))
                break;
            cnt++;
        }
        if(cnt > val) {
            infos.clear();
            val = cnt;
            infos.add(new Info(s1.str, s1.idx, s2.idx, e));
            infos.add(new Info(s2.str, s2.idx, s1.idx, s));
        }else if(cnt == val) {
            infos.add(new Info(s1.str, s1.idx, s2.idx, e));
            infos.add(new Info(s2.str, s2.idx, s1.idx, s));
        }else
            return false;
        return true;
    }
}