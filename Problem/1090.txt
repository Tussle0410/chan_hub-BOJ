<problem-name>체커
<blog>
<tag>브루트포스 알고리즘
<java-code>
import java.io.*;
import java.util.*;
class Main {
    static class Pos{
        int x, y;
        Pos(int x, int y){
            this.x = x;
            this.y = y;
        }
    }
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int N = Integer.parseInt(br.readLine());
        StringTokenizer st;
        Pos[] pos = new Pos[N];
        for(int i=0;i&lt;N;i++){
            st = new StringTokenizer(br.readLine()," ");
            int x = Integer.parseInt(st.nextToken());
            int y = Integer.parseInt(st.nextToken());
            pos[i] = new Pos(x, y);
        }
        List&lt;Pos> list = new ArrayList&lt;>();
        for(int i=0;i&lt;N;i++) {
            list.add(pos[i]);
        }
        for(int i=0;i&lt;N;i++){
            for(int j=i+1;j&lt;N;j++){
                if(pos[i].x == pos[j].x && pos[i].y == pos[j].y){
                    continue;
                }
                list.add(new Pos(pos[i].x, pos[j].y));
                list.add(new Pos(pos[j].x, pos[i].y));
            }
        }
        int size = list.size();
        int[][] dif = new int[size][N];
        for(int i=0;i&lt;size;i++){
            for(int j=0;j&lt;N;j++){
                dif[i][j] = Math.abs(list.get(i).x - pos[j].x) + Math.abs(list.get(i).y - pos[j].y);
            }
        }

        for(int i=0;i&lt;size;i++){
            Arrays.sort(dif[i]);
        }
        for(int i=0;i&lt;size;i++){
            for(int j=1;j&lt;N;j++){
                dif[i][j] += dif[i][j-1];
            }
        }
        StringBuilder sb = new StringBuilder();
        sb.append("0 ");
        for(int i=1;i&lt;N;i++){
            int min = Integer.MAX_VALUE;
            for(int j=0;j&lt;size;j++){
                min = Math.min(min, dif[j][i]);
            }
            sb.append(min).append(" ");
        }
        bw.write(sb.toString());
        bw.flush();
        bw.close();
        br.close();
    }
}