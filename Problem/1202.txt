<problem-name>보석 도둑
<blog>https://tussle.tistory.com/916
<tag>자료 구조, 그리디 알고리즘, 정렬, 우선순위 큐
<java-code>
import java.io.*;
import java.util.*;

public class Main {
    static class jewel implements Comparable&lt;jewel> {
        int value, weight;
        public jewel(int value, int weight){
            this.value = value;
            this.weight = weight;
        }
        @Override
        public int compareTo(jewel o) {
            if(this.weight == o.weight)
                return o.value - this.value;
            return this.weight - o.weight;
        }
    }
    static int N,K;
    static long answer = 0;
    static int[] bag;
    static jewel[] jewels;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = new StringTokenizer(br.readLine()," ");
        N = Integer.parseInt(st.nextToken());
        K = Integer.parseInt(st.nextToken());
        bag = new int[K];
        jewels = new jewel[N];
        for(int i=0;i&lt;N;i++){
            st = new StringTokenizer(br.readLine()," ");
            int M = Integer.parseInt(st.nextToken());
            int V = Integer.parseInt(st.nextToken());
            jewels[i] = new jewel(V, M);
        }
        for(int i=0;i&lt;K;i++){
            int C = Integer.parseInt(br.readLine());
            bag[i] = C;
        }
        Arrays.sort(bag);
        Arrays.sort(jewels);
        PriorityQueue&lt;Integer> pq = new PriorityQueue&lt;>(Comparator.reverseOrder());
        for(int i=0,j=0;i&lt;K;i++){
            while(j&lt;N){
                if(bag[i] &lt; jewels[j].weight)
                    break;
                pq.add(jewels[j++].value);
            }
            if(!pq.isEmpty())
                answer += pq.poll();
        }
        bw.write(answer + "");
        bw.flush();
        bw.close();
        br.close();
    }
}