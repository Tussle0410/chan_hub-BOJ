<problem-name>회의실 배정
<blog>https://tussle.tistory.com/259
<tag>그리디 알고리즘, 정렬
<java-code>
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class Main {
    static class info implements Comparable&lt;info>{
        int start, end;
        public info(int start, int end){
            this.start = start;
            this.end = end;
        }

        @Override
        public int compareTo(info o) {
            if(this.end == o.end)
                return this.start - o.start;
            return this.end - o.end;
        }
    }
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int N = Integer.parseInt(br.readLine());
        PriorityQueue&lt;info> pq = new PriorityQueue&lt;>();
        StringTokenizer st;
        for(int i=0;i&lt;N;i++){
            st = new StringTokenizer(br.readLine(), " ");
            pq.add(new info(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())));
        }
        int answer = 1;
        int end = pq.poll().end;
        while(!pq.isEmpty()){
            info cur = pq.poll();
            if(cur.start >= end){
                answer++;
                end = cur.end;
            }
        }
        bw.write(String.valueOf(answer));
        bw.flush();
        bw.close();
        br.close();
    }
}
